name: CI

on:
    push:
        branches:
            - master

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Use Node 12.x
                uses: actions/setup-node@v1
                with:
                    node-version: '12.x'
            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"
            -   name: Cache Yarn
                uses: actions/cache@v2
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-
            -   name: Install dependencies
                run: yarn install
            -   name: Run Tests
                run: yarn run ng test --watch=false --browsers=ChromeHeadlessCustom
    build:
        name: Build
        needs: test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Use Node 12.x
                uses: actions/setup-node@v1
                with:
                    node-version: '12.x'
            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"
            -   name: Cache Yarn
                uses: actions/cache@v2
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-
            -   name: Install dependencies
                run: yarn install
            -   name: Build
                run: yarn run ng build --prod
